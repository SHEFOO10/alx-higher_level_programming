=============================
tests for 1-my_list.py
=======================

Import:
    >>> MyList = __import__('1-my_list').MyList

empty_list:
    >>> obj = MyList([])
    >>> obj.print_sorted()
    []

No argument given:
    >>> obj = MyList()
    >>> obj.print_sorted()
    []


array of integers:
    >>> obj = MyList([7, 9, 3, 2, 1])
    >>> obj.print_sorted()
    [1, 2, 3, 7, 9]


array of strings:
    >>> obj = MyList(["Nour", "Sherif", 'Saif', 'Mohamed', 'Ahmed'])
    >>> obj.print_sorted()
    ['Ahmed', 'Mohamed', 'Nour', 'Saif', 'Sherif']


give the class more than one argument:
    >>> my_list = MyList([1, 4, 2, 3], [1, 2, 3])
    Traceback (most recent call last):
    TypeError: list expected at most 1 argument, got 2

array with different types:
    >>> obj = MyList([23, 10.5, (), 'Ahmed'])
    >>> obj.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'tuple' and 'float'

array with duplicated values:
    >>> obj = MyList([1, 22, 3, 4, 13, -1, -2, 2, 2])
    >>> obj.print_sorted()
    [-2, -1, 1, 2, 2, 3, 4, 13, 22]

use list methods:
    >>> my_list = MyList()
    >>> my_list.append(3) 
    >>> my_list.append(50000) 
    >>> my_list.append(4000) 
    >>> my_list.append(5465464)
    >>> my_list.append(125)
    >>> my_list.append(144)
    >>> my_list.append(144000000000000)
    >>> my_list.print_sorted()
    [3, 125, 144, 4000, 50000, 5465464, 144000000000000]

    >>> my_list.clear()
    >>> my_list.print_sorted()
    []

tring to add None value:
    >>> my_list = MyList()
    >>> my_list.append(3) 
    >>> my_list.append(50000) 
    >>> my_list.append(4000) 
    >>> my_list.append(None) 
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'NoneType' and 'int'