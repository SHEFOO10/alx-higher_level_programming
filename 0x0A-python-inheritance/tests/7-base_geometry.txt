+++++++++++++++++++++
7-base-geometry tests
+++++++++++++++++++++


Import:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry(None)
    Traceback (most recent call last):
    TypeError: BaseGeometry() takes no arguments

    >>> bg = BaseGeometry()

area function:
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented


Normal Tests:
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

test with string:
    >>> bg.integer_validator("my_int", "John")
    Traceback (most recent call last):
    TypeError: my_int must be an integer

test with value equals 0:
    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    TypeError: my_int must be greater than 0

with negative value:
    >>> bg.integer_validator("my_int", -4)
    Traceback (most recent call last):
    TypeError: my_int must be greater than 0


with None value:
    >>> bg.integer_validator("my_int", None)
    Traceback (most recent call last):
    TypeError: my_int must be an integer

different datatypes:
    >>> bg.integer_validator("my_int", [1, 34, 3])
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", {2, 3, 4})
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", {'name': 3, 'age': 23})
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", (2, 34))
    Traceback (most recent call last):
    TypeError: my_int must be an integer
